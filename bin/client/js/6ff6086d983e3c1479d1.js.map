{"version":3,"sources":["webpack:///./assets/gif/giphy.gif","webpack:///./images/terminal-spot.png","webpack:///./scss/app.scss?a308","webpack:///./scss/app.scss","webpack:///./calculate_distance.js","webpack:///./components/Map.js","webpack:///./components/AtmMap.js","webpack:///./app.js"],"names":["module","exports","__webpack_require__","p","content","i","options","hmr","transform","insertInto","undefined","locals","push","degrees_to_radians","degrees","Math","PI","distance","lat1","long1","lat2","long2","unit","arguments","length","radiusLat1","radiusLong1","radiusLat2","distLong","distLat","angle","sin","cos","meter","atan2","sqrt","center","lat","lng","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","err","console","warn","concat","code","message","enableHighAccuracy","timeout","maximumAge","MapContainer","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","showingInfoWindow","activeMarker","selectedPlace","terminals","loading","clickedTerm","bankTerminalsName","onMarkerClick","props","marker","e","setState","position","onClose","_inherits","Component","key","value","_this2","aroundCenter","lng1","lng2","axios","get","then","res","data","_this3","renderMarkers","filter","item","address","map","el","log","Object","values","bank","error","react_default","a","createElement","dist","_id","onClick","name","toFixed","title","icon","terminalSpot","Fragment","src","gif","alt","google","zoom","style","width","height","margin","initialCenter","path","strokeColor","strokeOpacity","strokeWeight","visible","googleApiWrapper","apiKey","AtmMap","React","react","className","Map","ReactDOM","render","AtmMap_AtmMap","document","querySelector"],"mappings":"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","file":"js/6ff6086d983e3c1479d1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/gif/giphy.gif\";","module.exports = __webpack_public_path__ + \"images/terminal-spot.png\";","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".container {\\n  margin: 0 auto;\\n  flex-direction: row;\\n  text-align: center; }\\n\\n#map {\\n  height: 100%; }\\n\\nhtml, body {\\n  height: 100%;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #1A2632; }\\n  html h1, body h1 {\\n    color: white; }\\n\\nh4 {\\n  color: black;\\n  font-size: 1rem;\\n  font-weight: 400; }\\n\", \"\"]);\n\n","import {sin, cos, sqrt, atan2} from \"mathjs\";\n\nconst degrees_to_radians = degrees => {\n    const pi = Math.PI;\n\n    return degrees * (pi / 180);\n};\n\n// Retourne la distance en metre ou kilometre (si unit = 'k') entre deux latitude et longitude fournit\n\nconst distance = (lat1, long1, lat2, long2, unit = \"k\") => {\n    const earthRadius = 6378137; // Terre = sphÃ¨re de 6378km de rayon\n    const radiusLat1 = degrees_to_radians(lat1);\n    const radiusLong1 = degrees_to_radians(long1);\n    const radiusLat2 = degrees_to_radians(lat2);\n    const radiusLong2 = degrees_to_radians(long2);\n    const distLong = (radiusLong2 - radiusLong1) / 2;\n    const distLat = (radiusLat2 - radiusLat1) / 2;\n    const angle =\n        sin(distLat) * sin(distLat) +\n        cos(radiusLat1) * cos(radiusLat2) * (sin(distLong) * sin(distLong));\n    const diffDistance = 2 * atan2(sqrt(angle), sqrt(1 - angle));\n    //\n    const meter = earthRadius * diffDistance;\n\n    if (unit === \"k\") {\n        return meter / 1000;\n    }\n    return meter;\n};\n\n// const calcul = distance(50.632903, 5.585911, 50.635207, 5.587967, \"m\");\n\n// console.log(calcul);\n\nexport default distance;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {\n    Map,\n    GoogleApiWrapper as googleApiWrapper,\n    InfoWindow,\n    Marker,\n    Polyline,\n} from \"google-maps-react\";\nimport gif from \"../assets/gif/giphy.gif\";\nimport distance from \"../calculate_distance\";\n\nimport terminalSpot from \"../images/terminal-spot.png\";\n\nlet center = {lat: \"\", lng: \"\"},\n    zoom = 15;\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n};\n\nconst error = err => {\n    console.warn(`ERREUR (${err.code}): ${err.message}`);\n};\nconst success = pos => {\n    center = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude,\n    };\n};\n\nnavigator.geolocation.getCurrentPosition(success, error, options);\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false, // Hides or the shows the infoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: {}, // Shows the infoWindow to the selected place upon a marker\n        terminals: [], // fetch all terminals\n        loading: false,\n        clickedTerm: {lat: 0, lng: 0},\n        distance: 0,\n        bankTerminalsName: [],\n    };\n\n    componentDidMount() {\n        let aroundCenter = {\n            lat1: center.lat + 0.02,\n            lng1: center.lng + 0.04,\n            lat2: center.lat - 0.02,\n            lng2: center.lng - 0.04,\n        };\n\n        axios\n            .get(\n                `/api/pos/${aroundCenter.lat1}/${aroundCenter.lat2}/${\n                    aroundCenter.lng1\n                }/${aroundCenter.lng2}`,\n            )\n            .then(res => {\n                this.setState({\n                    terminals: res.data.terminals,\n                    loading: true,\n                });\n            });\n    }\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n            clickedTerm: {\n                lat: props.position.lat,\n                lng: props.position.lng,\n            },\n        });\n    };\n\n    onClose = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null,\n            });\n        }\n    };\n\n    render() {\n        const mapStyles = {\n            width: \"95%\",\n            height: \"75%\",\n            margin: \"0 auto\",\n        };\n\n        const renderMarkers = this.state.terminals\n            .filter(item => item.address != null || item.address != undefined)\n            .map(el => {\n                try {\n                    console.log(Object.values(el.bank)[4]);\n                } catch (error) {\n                    console.warn(error);\n                }\n\n                return (\n                    <Marker\n                        key={el._id}\n                        onClick={this.onMarkerClick}\n                        name={\n                            !el.address\n                                ? `${\"N/A se trouve Ã  \"}${distance(\n                                      el.latitude,\n                                      el.longitude,\n                                      center.lat,\n                                      center.lng,\n                                      \"k\",\n                                  ).toFixed(2)} km`\n                                : `${el.address} se trouve Ã  ${distance(\n                                      el.latitude,\n                                      el.longitude,\n                                      center.lat,\n                                      center.lng,\n                                      \"k\",\n                                  ).toFixed(2)} km`\n                        }\n                        title={el.address}\n                        icon={terminalSpot}\n                        position={{lat: el.latitude, lng: el.longitude}}\n                    />\n                );\n            });\n\n        return (\n            <>\n                {!this.state.loading && (\n                    <div>\n                        <h3>{\"Don't worry ! It's loading...\"}</h3>\n                        <img src={gif} alt=\"loading\" />\n                    </div>\n                )}\n                {this.state.loading && (\n                    <Map\n                        google={this.props.google}\n                        zoom={zoom}\n                        style={mapStyles}\n                        initialCenter={center}>\n                        {this.state.clickedTerm.lat !== 0 &&\n                        this.state.clickedTerm.lng !== 0 ? (\n                            <Polyline\n                                path={[\n                                    {lat: center.lat, lng: center.lng},\n                                    {\n                                        lat: this.state.clickedTerm.lat,\n                                        lng: this.state.clickedTerm.lng,\n                                    },\n                                ]}\n                                strokeColor=\"#EB6123\"\n                                strokeOpacity={0.8}\n                                strokeWeight={3}\n                            />\n                        ) : (\n                            \"\"\n                        )}\n\n                        <Marker\n                            onClick={this.onMarkerClick}\n                            name={\"You're here\"}\n                        />\n                        {renderMarkers}\n\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}>\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                )}\n            </>\n        );\n    }\n}\n\nexport default googleApiWrapper({\n    apiKey: \"AIzaSyDkmRb41NI7USOlvwkK6KrPA7UF5zpboW8\",\n})(MapContainer);\n","/* becodeorg/trouvkach\n *\n * /src/client/components/hello.js - Hello Component\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport Map from \"./Map\";\n\nimport \"../scss/app.scss\";\n\nexport default class AtmMap extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>{\"Check ATM \"}</h1>\n                <hr />\n                <br />\n                <div>\n                    <Map />\n                </div>\n            </div>\n        );\n    }\n}\n","/* becodeorg/trouvkach\n *\n * /src/client/app.js - Client entry point\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./calculate_distance\";\n\nimport AtmMap from \"./components/AtmMap\";\n\nReactDOM.render(<AtmMap />, document.querySelector(\"#app\"));\n"],"sourceRoot":""}