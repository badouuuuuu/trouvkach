{"version":3,"sources":["webpack:///./components/Map.js","webpack:///./assets/gif/giphy.gif","webpack:///./images/terminal-spot.png","webpack:///./scss/app.scss?a308","webpack:///./scss/app.scss","webpack:///./components/AtmMap.js","webpack:///./app.js","webpack:///./calculate_distance.js"],"names":["center","lat","lng","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","err","console","warn","concat","code","message","enableHighAccuracy","timeout","maximumAge","MapContainer","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","showingInfoWindow","activeMarker","selectedPlace","terminals","loading","clickedTerm","distance","bankTerminalsName","onMarkerClick","props","marker","e","setState","position","onClose","_inherits","Component","key","value","_this2","aroundCenter","lat1","lng1","lat2","lng2","axios","get","then","res","data","_this3","renderMarkers","filter","item","address","undefined","map","el","log","Object","values","bank","error","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","google_maps_react__WEBPACK_IMPORTED_MODULE_2__","_id","onClick","name","toFixed","title","icon","terminalSpot","Fragment","src","gif","alt","google","zoom","style","width","height","margin","initialCenter","path","strokeColor","strokeOpacity","strokeWeight","visible","googleApiWrapper","apiKey","process","env","API_GOOGLE_MAP_KEY","module","exports","__webpack_require__","p","content","i","options","hmr","transform","insertInto","locals","push","AtmMap","React","react","className","Map","ReactDOM","render","AtmMap_AtmMap","document","querySelector","mathjs__WEBPACK_IMPORTED_MODULE_0__","degrees_to_radians","degrees","Math","PI","long1","long2","unit","radiusLat1","radiusLong1","radiusLat2","distLong","distLat","angle","sin","cos","meter","atan2","sqrt"],"mappings":"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","file":"js/e6e2cf127f61490cac24.js","sourcesContent":["import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {\n    Map,\n    GoogleApiWrapper as googleApiWrapper,\n    InfoWindow,\n    Marker,\n    Polyline,\n} from \"google-maps-react\";\nimport gif from \"../assets/gif/giphy.gif\";\nimport distance from \"../calculate_distance\";\n\nimport terminalSpot from \"../images/terminal-spot.png\";\n\nlet center = {lat: \"\", lng: \"\"},\n    zoom = 15;\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n};\n\nconst error = err => {\n    console.warn(`ERREUR (${err.code}): ${err.message}`);\n};\nconst success = pos => {\n    center = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude,\n    };\n};\n\nnavigator.geolocation.getCurrentPosition(success, error, options);\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false, // Hides or the shows the infoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: {}, // Shows the infoWindow to the selected place upon a marker\n        terminals: [], // fetch all terminals\n        loading: false,\n        clickedTerm: {lat: 0, lng: 0},\n        distance: 0,\n        bankTerminalsName: [],\n    };\n\n    componentDidMount() {\n        let aroundCenter = {\n            lat1: center.lat + 0.02,\n            lng1: center.lng + 0.04,\n            lat2: center.lat - 0.02,\n            lng2: center.lng - 0.04,\n        };\n\n        axios\n            .get(\n                `/api/pos/${aroundCenter.lat1}/${aroundCenter.lat2}/${\n                    aroundCenter.lng1\n                }/${aroundCenter.lng2}`,\n            )\n            .then(res => {\n                this.setState({\n                    terminals: res.data.terminals,\n                    loading: true,\n                });\n            });\n    }\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n            clickedTerm: {\n                lat: props.position.lat,\n                lng: props.position.lng,\n            },\n        });\n    };\n\n    onClose = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null,\n            });\n        }\n    };\n\n    render() {\n        const mapStyles = {\n            width: \"95%\",\n            height: \"75%\",\n            margin: \"0 auto\",\n        };\n\n        const renderMarkers = this.state.terminals\n            .filter(item => item.address != null || item.address != undefined)\n            .map(el => {\n                try {\n                    console.log(Object.values(el.bank)[4]);\n                } catch (error) {\n                    console.warn(error);\n                }\n\n                return (\n                    <Marker\n                        key={el._id}\n                        onClick={this.onMarkerClick}\n                        name={\n                            !el.address\n                                ? `${\"N/A se trouve à \"}${distance(\n                                      el.latitude,\n                                      el.longitude,\n                                      center.lat,\n                                      center.lng,\n                                      \"k\",\n                                  ).toFixed(2)} km`\n                                : `${el.address} se trouve à ${distance(\n                                      el.latitude,\n                                      el.longitude,\n                                      center.lat,\n                                      center.lng,\n                                      \"k\",\n                                  ).toFixed(2)} km`\n                        }\n                        title={el.address}\n                        icon={terminalSpot}\n                        position={{lat: el.latitude, lng: el.longitude}}\n                    />\n                );\n            });\n\n        return (\n            <>\n                {!this.state.loading && (\n                    <div>\n                        <h3>{\"Don't worry ! It's loading...\"}</h3>\n                        <img src={gif} alt=\"loading\" />\n                    </div>\n                )}\n                {this.state.loading && (\n                    <Map\n                        google={this.props.google}\n                        zoom={zoom}\n                        style={mapStyles}\n                        initialCenter={center}>\n                        {this.state.clickedTerm.lat !== 0 &&\n                        this.state.clickedTerm.lng !== 0 ? (\n                            <Polyline\n                                path={[\n                                    {lat: center.lat, lng: center.lng},\n                                    {\n                                        lat: this.state.clickedTerm.lat,\n                                        lng: this.state.clickedTerm.lng,\n                                    },\n                                ]}\n                                strokeColor=\"#EB6123\"\n                                strokeOpacity={0.8}\n                                strokeWeight={3}\n                            />\n                        ) : (\n                            \"\"\n                        )}\n\n                        <Marker\n                            onClick={this.onMarkerClick}\n                            name={\"You're here\"}\n                        />\n                        {renderMarkers}\n\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}>\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                )}\n            </>\n        );\n    }\n}\n\nexport default googleApiWrapper({\n    apiKey: process.env.API_GOOGLE_MAP_KEY,\n})(MapContainer);\n","module.exports = __webpack_public_path__ + \"assets/gif/giphy.gif\";","module.exports = __webpack_public_path__ + \"images/terminal-spot.png\";","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".container {\\n  margin: 0 auto;\\n  flex-direction: row;\\n  text-align: center; }\\n\\n#map {\\n  height: 100%; }\\n\\nhtml, body {\\n  height: 100%;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #1A2632; }\\n  html h1, body h1 {\\n    color: white; }\\n\\nh4 {\\n  color: black;\\n  font-size: 1rem;\\n  font-weight: 400; }\\n\", \"\"]);\n\n","/* becodeorg/trouvkach\n *\n * /src/client/components/hello.js - Hello Component\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport Map from \"./Map\";\n\nimport \"../scss/app.scss\";\n\nexport default class AtmMap extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>{\"Check ATM \"}</h1>\n                <hr />\n                <br />\n                <div>\n                    <Map />\n                </div>\n            </div>\n        );\n    }\n}\n","/* becodeorg/trouvkach\n *\n * /src/client/app.js - Client entry point\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./calculate_distance\";\n\nimport AtmMap from \"./components/AtmMap\";\n\nReactDOM.render(<AtmMap />, document.querySelector(\"#app\"));\n","import {sin, cos, sqrt, atan2} from \"mathjs\";\n\nconst degrees_to_radians = degrees => {\n    const pi = Math.PI;\n\n    return degrees * (pi / 180);\n};\n\n// Retourne la distance en metre ou kilometre (si unit = 'k') entre deux latitude et longitude fournit\n\nconst distance = (lat1, long1, lat2, long2, unit = \"k\") => {\n    const earthRadius = 6378137; // Terre = sphère de 6378km de rayon\n    const radiusLat1 = degrees_to_radians(lat1);\n    const radiusLong1 = degrees_to_radians(long1);\n    const radiusLat2 = degrees_to_radians(lat2);\n    const radiusLong2 = degrees_to_radians(long2);\n    const distLong = (radiusLong2 - radiusLong1) / 2;\n    const distLat = (radiusLat2 - radiusLat1) / 2;\n    const angle =\n        sin(distLat) * sin(distLat) +\n        cos(radiusLat1) * cos(radiusLat2) * (sin(distLong) * sin(distLong));\n    const diffDistance = 2 * atan2(sqrt(angle), sqrt(1 - angle));\n    //\n    const meter = earthRadius * diffDistance;\n\n    if (unit === \"k\") {\n        return meter / 1000;\n    }\n    return meter;\n};\n\n// const calcul = distance(50.632903, 5.585911, 50.635207, 5.587967, \"m\");\n\n// console.log(calcul);\n\nexport default distance;"],"sourceRoot":""}